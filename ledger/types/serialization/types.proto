syntax = "proto3";
package serialization;

// For more information on gogo.proto, see:
// https://github.com/gogo/protobuf/blob/master/extensions.md
import "github.com/gogo/protobuf/gogoproto/gogo.proto";


message PublicKey {
    bytes data = 2;
}

message PrivateKey {
    bytes data = 2;
}

message Signature {
    bytes data = 2;
}

message Validator {
    bytes id = 1;
    int64 stake = 2;
}

message OverspendingProof {
    int64 reserve_sequence = 1;
    repeated ServicePaymentTx service_payments = 2;
}

message Coin {
    string denom = 1;
    int64 amount = 2;
}

message ReservedFund {
    repeated Coin collateral = 1;
    repeated Coin initial_fund = 2;
    repeated Coin used_fund = 3;
    repeated bytes resource_ids = 4;
    int64 end_block_height = 5;
    int64 reserve_sequence = 6; 
    repeated TransferRecord transfer_record = 7;
}

message TransferRecord {
    ServicePaymentTx service_payment = 1;
}

message Account {
    int64 sequence = 1;
    repeated Coin balance = 2;
    repeated ReservedFund reserved_funds = 3;
    int64 last_updated_block_height = 4;
    PublicKey pub_key = 5;
}

message TxInput {
    bytes address = 1;
    repeated Coin coins = 2;
    int64 sequence = 3;
    Signature signature = 4;
    PublicKey pubkey = 5;
}

message TxOutput {
    bytes address = 1;
    repeated Coin coins = 2;
}

message Tx {
    oneof tx {
        CoinbaseTx coinbase = 1;
        SendTx send = 2;
        ReserveFundTx reserve = 3;
        ReleaseFundTx release = 4;
        ServicePaymentTx service_payment = 5;
        SlashTx slash = 6;
        SplitContractTx split_contract = 7;
        UpdateValidatorsTx update_validators = 8;
    }
}

message CoinbaseTx {
    TxInput proposer = 1;
    repeated TxOutput outputs = 2;
    int64 block_height = 3;
}

message SendTx {
    int64 gas = 1;
    Coin fee = 2;
    repeated TxInput inputs = 3;
    repeated TxOutput outputs = 4;
}

message ReserveFundTx {
    int64 gas = 1;
    Coin fee = 2;
    TxInput source = 3;
    repeated Coin collateral = 4;
    repeated bytes resource_ids = 5;
    int64 duration = 6;
}

message ReleaseFundTx {
    int64 gas = 1;
    Coin fee = 2;
    TxInput source = 3;
    int64 reserve_sequence = 4;
}

message ServicePaymentTx {
    int64 gas = 1;
    Coin fee = 2;
    TxInput source = 3;
    TxInput target = 4;
    int64 PaymentSequence = 5;
    int64 ReserveSequence = 6;
    bytes ResourceId = 7;
}

message SlashTx {
    TxInput proposer = 1;
    bytes slashed_address = 2;
    int64 reserve_sequence = 3;
    bytes slash_proof = 4;
}

message Split {
    bytes address = 1;
    int64 percentage = 2;
}

message SplitContract {
    bytes initiator_address = 1;
    bytes resource_id = 2;
    repeated Split splits = 3;
    int64 end_block_height = 4;
}

message SplitContractTx {
    int64 gas = 1;
    Coin fee = 2;
    bytes resource_id = 3;
    TxInput initiator = 4;
    repeated Split splits = 5;
    int64 duration = 6;
}

message UpdateValidatorsTx {
    int64 gas = 1;
    Coin fee = 2;
    TxInput proposer = 3;
    repeated Validator validators = 4;
}